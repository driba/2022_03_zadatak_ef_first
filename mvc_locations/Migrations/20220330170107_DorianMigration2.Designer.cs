// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc_locations.Data;

#nullable disable

namespace mvc_locations.Migrations
{
    [DbContext(typeof(LocationContext))]
    [Migration("20220330170107_DorianMigration2")]
    partial class DorianMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("mvc_locations.Models.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("city_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<decimal>("latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("longitude")
                        .HasColumnType("decimal(9,6)");

                    b.HasKey("id");

                    b.HasIndex("country_id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            city_name = "Washington DC",
                            country_id = 1,
                            latitude = 38.897957m,
                            longitude = -77.036560m
                        },
                        new
                        {
                            id = 2,
                            city_name = "New York",
                            country_id = 1,
                            latitude = 40.73061m,
                            longitude = -73.740135m
                        },
                        new
                        {
                            id = 3,
                            city_name = "Zagreb",
                            country_id = 2,
                            latitude = 45.815399m,
                            longitude = 15.966568m
                        },
                        new
                        {
                            id = 4,
                            city_name = "Rijeka",
                            country_id = 2,
                            latitude = 45.328979m,
                            longitude = 14.457664m
                        },
                        new
                        {
                            id = 5,
                            city_name = "Split",
                            country_id = 2,
                            latitude = 43.508133m,
                            longitude = 16.440193m
                        },
                        new
                        {
                            id = 6,
                            city_name = "Los Angeles",
                            country_id = 1,
                            latitude = 34.052235m,
                            longitude = -118.243683m
                        });
                });

            modelBuilder.Entity("mvc_locations.Models.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("country_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("country_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_name_eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            id = 1,
                            country_code = "1",
                            country_name = "USA",
                            country_name_eng = "United States"
                        },
                        new
                        {
                            id = 2,
                            country_code = "385",
                            country_name = "Hrvatska",
                            country_name_eng = "Croatia"
                        });
                });

            modelBuilder.Entity("mvc_locations.Models.City", b =>
                {
                    b.HasOne("mvc_locations.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
